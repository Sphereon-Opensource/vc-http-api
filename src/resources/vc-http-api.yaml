components:
  schemas:
    Credential:
      description: A JSON-LD Verifiable Credential without a proof.
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        credentialSubject:
          degree:
            name: Bachelor of Science and Arts
            type: BachelorDegree
          id: 'did:example:123'
        id: 'http://example.gov/credentials/3732'
        issuanceDate: '2020-03-16T22:37:26.544Z'
        issuer: 'did:example:123'
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
      properties:
        '@context':
          description: The JSON-LD context of the credential.
          type: array
        credentialSubject:
          description: The subject
          type: object
        expirationDate:
          description: The expirationDate
          type: string
        id:
          description: The ID of the credential.
          type: string
        issuanceDate:
          description: The issuanceDate
          type: string
        issuer:
          $ref: '#/components/schemas/Issuer'
        type:
          description: The JSON-LD type of the credential.
          type: array
      type: object
    IssueCredentialRequest:
      properties:
        credential:
          $ref: '#/components/schemas/Credential'
        options:
          $ref: '#/components/schemas/LinkedDataProofOptions'
      type: object
    IssueCredentialResponse:
      $ref: '#/components/schemas/VerifiableCredential'
    Issuer:
      description: A JSON-LD Verifiable Credential Issuer.
      example:
        id: 'did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd'
      oneOf:
        - type: string
        - properties:
            id:
              type: string
          type: object
      type: object
    LinkedDataProof:
      description: A JSON-LD Linked Data proof.
      example:
        created: '2020-04-02T18:28:08Z'
        jws: >-
          eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
        proofPurpose: assertionMethod
        type: Ed25519Signature2018
        verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
      properties:
        created:
          description: Date the proof was created.
          type: string
        jws:
          description: Detached JSON Web Signature
          type: string
        proofPurpose:
          description: The purpose of the proof to be used with verificationMethod.
          type: string
        type:
          description: Linked Data Signature Suite used to produce proof.
          type: string
        verificationMethod:
          description: Verification Method used to verify proof.
          type: string
      type: object
    LinkedDataProofOptions:
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      example:
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
        created: '2020-04-02T18:48:36Z'
        domain: example.com
        proofPurpose: assertionMethod
        verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
      properties:
        challenge:
          description: The challenge of the proof.
          type: string
        created:
          description: The date of the proof. If omitted system time will be used.
          type: string
        domain:
          description: The domain of the proof.
          type: string
        proofPurpose:
          description: The purpose of the proof. If omitted "assertionMethod" will be used.
          type: string
        verificationMethod:
          description: >-
            The URI of the verificationMethod used for the proof. If omitted a
            default assertionMethod will be used.
          type: string
      type: object
    Presentation:
      description: A JSON-LD Verifiable Presentation without a proof.
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        holder: 'did:example:123'
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - 'https://www.w3.org/2018/credentials/v1'
              - 'https://www.w3.org/2018/credentials/examples/v1'
          - id: 'http://example.gov/credentials/3732'
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: 'did:example:123'
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              degree:
                name: Bachelor of Science and Arts
                type: BachelorDegree
              id: 'did:example:123'
          - proof:
              created: '2020-04-02T18:28:08Z'
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
              proofPurpose: assertionMethod
              type: Ed25519Signature2018
              verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
      properties:
        '@context':
          description: The JSON-LD context of the presentation.
          type: array
        holder:
          description: The holder
          type: object
        id:
          description: The ID of the presentation.
          type: string
        type:
          description: The JSON-LD type of the presentation.
          type: array
        verifiableCredential:
          description: The Verifiable Credentials
          type: array
      type: object
    ProvePresentationRequest:
      properties:
        options:
          $ref: '#/components/schemas/LinkedDataProofOptions'
        presentation:
          $ref: '#/components/schemas/Presentation'
      type: object
    ProvePresentationResponse:
      $ref: '#/components/schemas/VerifiablePresentation'
    VerifiableCredential:
      allOf:
        - $ref: '#/components/schemas/Credential'
        - properties:
            proof:
              $ref: '#/components/schemas/LinkedDataProof'
          type: object
      description: A JSON-LD Verifiable Credential with a proof.
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        credentialSubject:
          degree:
            name: Bachelor of Science and Arts
            type: BachelorDegree
          id: 'did:example:123'
        id: 'http://example.gov/credentials/3732'
        issuanceDate: '2020-03-16T22:37:26.544Z'
        issuer: 'did:example:123'
        proof:
          created: '2020-04-02T18:28:08Z'
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
          proofPurpose: assertionMethod
          type: Ed25519Signature2018
          verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
      type: object
    VerifiablePresentation:
      allOf:
        - $ref: '#/components/schemas/Presentation'
        - properties:
            proof:
              $ref: '#/components/schemas/LinkedDataProof'
          type: object
      description: A JSON-LD Verifiable Presentation with a proof.
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        holder: 'did:example:123'
        proof:
          created: '2020-04-02T18:28:08Z'
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
          proofPurpose: assertionMethod
          type: Ed25519Signature2018
          verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - 'https://www.w3.org/2018/credentials/v1'
              - 'https://www.w3.org/2018/credentials/examples/v1'
          - id: 'http://example.gov/credentials/3732'
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: 'did:example:123'
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              degree:
                name: Bachelor of Science and Arts
                type: BachelorDegree
              id: 'did:example:123'
          - proof:
              created: '2020-04-02T18:28:08Z'
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
              proofPurpose: assertionMethod
              type: Ed25519Signature2018
              verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
      type: object
    VerificationResult:
      additionalProperties: false
      description: Object summarizing a verification
      example:
        checks:
          - proof
        errors: []
        warnings: []
      properties:
        checks:
          description: The checks performed
          type: array
        errors:
          description: Errors
          type: array
        warnings:
          description: Warnings
          type: array
      type: object
    VerifyCredentialRequest:
      properties:
        options:
          $ref: '#/components/schemas/LinkedDataProofOptions'
        verifiableCredential:
          $ref: '#/components/schemas/VerifiableCredential'
      type: object
    VerifyCredentialResponse:
      $ref: '#/components/schemas/VerificationResult'
    VerifyPresentationRequest:
      properties:
        options:
          $ref: '#/components/schemas/LinkedDataProofOptions'
        verifiablePresentation:
          $ref: '#/components/schemas/VerifiablePresentation'
      type: object
    VerifyPresentationResponse:
      $ref: '#/components/schemas/VerificationResult'
    RegisterRequest:
      additionalProperties: false
      description: Object containing registration information for a new issuer.
      example:
        username: <test-username>
        password: <test-password>
      properties:
        username:
          description: Name of the user to be registered
          type: string
        password:
          description: Password of the user to be registered
          type: string
info:
  contact:
    name: GitHub Source Code
    url: 'https://github.com/w3c-ccg/vc-http-api'
  description: >-
    This is an Experimental Open API Specification for the [VC Data
    Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: 'http://www.w3.org/Consortium/Legal/copyright-software.'
  title: VC HTTP API
  version: 0.0.0
openapi: 3.0.0
paths:
  /issue/credentials:
    post:
      description: Issues a credential and returns it in the response body.
      operationId: issueCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialRequest'
        description: Parameters for issuing the credential.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialResponse'
          description: Credential successfully issued!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: Issues a credential and returns it in the response body.
      tags:
        - Issuer
  /prove/presentations:
    post:
      description: Proves a presentation and returns it in the response body.
      operationId: provePresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvePresentationRequest'
        description: Parameters for proving the presentation.
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvePresentationResponse'
          description: Presentation successfully proved!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: Proves a presentation and returns it in the response body.
      tags:
        - Holder
  /verify/credentials:
    post:
      description: >-
        Verifies a verifiableCredential and returns a verificationResult in the
        response body.
      operationId: verifyCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCredentialRequest'
        description: Parameters for verifying a verifiableCredential.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCredentialResponse'
          description: Verifiable Credential successfully verified!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: >-
        Verifies a verifiableCredential and returns a verificationResult in the
        response body.
      tags:
        - Verifier
  /verify/presentations:
    post:
      description: >-
        Verifies a verifiablePresentation and returns a verificationResult in
        the response body.
      operationId: verifyPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPresentationRequest'
        description: Parameters for verifying a verifiablePresentation.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPresentationResponse'
          description: Verifiable Presentation successfully verified!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: >-
        Verifies a verifiablePresentation and returns a verificationResult in
        the response body.
      tags:
        - Verifier
  /auth/register:
    post:
      description: >-
        Create a new issuer user.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        description: Parameters for registering a new user.
      responses:
        '200':
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: >-
        Registers a new user and creates a Factom DID for that user.
      tags:
        - Authentication
servers:
  - url: /services/
tags:
  - description: APIs for Issuers.
    name: Issuer
  - description: APIs for Verifiers.
    name: Verifier
  - description: Optional APIs for Holders.
    name: Holder
  - description: Authentication APIs for Issuers
    name: Authentication
