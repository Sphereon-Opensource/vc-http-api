openapi: 3.0.0
info:
  version: "0.0.0"
  title: VC HTTP API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-http-api
tags:
  - name: Issuer
    description: APIs for Issuers.
  - name: Verifier
    description: APIs for Verifiers.
  - name: Holder
    description: Optional APIs for Holders.
  - name: Revocation
    description: APIs for credential revocation.
  - name: Auth
    description: Auth APIs for Issuers
servers:
  - url: /services/
paths:
  /issue/credentials:
    post:
      tags:
        - Issuer
      summary: Issues a credential and returns it in the response body.
      operationId: issueCredential
      description: Issues a credential and returns it in the response body.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssueCredentialRequest"
        description: Parameters for issuing the credential.
      responses:
        "201":
          description: Credential successfully issued!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssueCredentialResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
  /prove/presentations:
    post:
      tags:
        - Holder
      summary: Proves a presentation and returns it in the response body.
      operationId: provePresentation
      description: >
        Proves a presentation and returns it in the response body. The current implementation will only provide
        a valid example presentation based on a static DID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvePresentationRequest"
        description: Parameters for proving the presentation.
      responses:
        "201":
          description: Presentation successfully proved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvePresentationResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
  /verify/credentials:
    post:
      tags:
        - Verifier
      summary: Verifies a verifiableCredential and returns a verificationResult in the response body.
      operationId: verifyCredential
      description: Verifies a verifiableCredential and returns a verificationResult in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyCredentialRequest"
        description: Parameters for verifying a verifiableCredential.
      responses:
        "200":
          description: Verifiable Credential successfully verified!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyCredentialResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
  /verify/presentations:
    post:
      tags:
        - Verifier
      summary: Verifies a verifiablePresentation and returns a verificationResult in the response body.
      operationId: verifyPresentation
      description: Verifies a verifiablePresentation and returns a verificationResult in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyPresentationRequest"
        description: Parameters for verifying a verifiablePresentation.
      responses:
        "200":
          description: Verifiable Presentation successfully verified!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyPresentationResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
  /revocations:
    post:
      description: Create a new revocation for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevocationListCreateRequest"
        description: Configuration for publishing a revocation credential
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationListResponse'
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      tags:
        - Revocation
    get:
      description: Get the revocations for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationListArrayResponse'
          description: success!
        '404':
          description: Could not find config for authenticated user.
        '500':
          description: error!
      tags:
        - Revocation
  /revocations/{id}:
    get:
      description: Get the parameters for a revocation configuration associated with the authenticated user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Revocation id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationListResponse'
          description: success!
        '404':
          description: Could not find config for authenticated user.
        '500':
          description: error!
      tags:
        - Revocation
  /revocations/{id}/list/manage:
    put:
      description: Update the revocation status of a specific revocation list index.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Revocation id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevocationStatus'
      responses:
        '200':
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      tags:
        - Revocation
  /revocations/{id}/list:
    post:
      description: Get revocation status for a specific index.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Revocation id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRevocationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationStatus'
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      tags:
        - Revocation
  /auth/register:
    post:
      description: >-
        Create a new issuer user.
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        description: Parameters for registering a new user.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      summary: >-
        Registers a new user and creates a Factom DID for that user.
      tags:
        - Auth
  /auth/login:
    post:
      description: Login with basic authentication.
      security:
        - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: success!
        '400':
          description: invalid input!
        '500':
          description: error!
      tags:
        - Auth

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  schemas:
    LinkedDataProof:
      type: object
      description: A JSON-LD Linked Data proof.
      properties:
        type:
          type: string
          description: Linked Data Signature Suite used to produce proof.
        created:
          type: string
          description: Date the proof was created.
        verificationMethod:
          type: string
          description: Verification Method used to verify proof.
        proofPurpose:
          type: string
          description: The purpose of the proof to be used with verificationMethod.
        jws:
          type: string
          description: Detached JSON Web Signature
      example:
        created: '2020-04-02T18:28:08Z'
        jws: >-
          eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
        proofPurpose: assertionMethod
        type: Ed25519Signature2018
        verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
    LinkedDataProofOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      properties:
        verificationMethod:
          type: string
          description: The URI of the verificationMethod used for the proof. If omitted a default assertionMethod will be used.
        proofPurpose:
          type: string
          description: The purpose of the proof. If omitted "assertionMethod" will be used.
        created:
          type: string
          description: The date of the proof. If omitted system time will be used.
        challenge:
          type: string
          description: The challenge of the proof.
        domain:
          type: string
          description: The domain of the proof.
      example:
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
        created: '2020-04-02T18:48:36Z'
        domain: example.com
        proofPurpose: assertionMethod
        verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
    VerificationResult:
      type: object
      additionalProperties: false
      description: Object summarizing a verification
      properties:
        checks:
          type: array
          description: The checks performed
        warnings:
          type: array
          description: Warnings
        errors:
          type: array
          description: Errors
      example:
        checks:
          - proof
        errors: []
        warnings: []
    Issuer:
      type: object
      description: A JSON-LD Verifiable Credential Issuer.
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
      example:
        id: 'did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd'
    CredentialStatus:
      type: object
      description: An object describing where to resolve the credential revocation status.
      properties:
        id:
          description: A URL that identifies the status information associated with the Verifiable Credential.
          type: string
        "type":
          description: The JSONLD object type. Currently RevocationList2020Status.
          type: string
          enum:
            - RevocationList2020Status
        revocationListIndex:
          description: >
            An arbitrary size integer greater than or equal to 0, expressed as a string.
            The value identifies the bit position of the revocation status of the verifiable credential.
          type: string
        revocationListCredential:
          description: A URL to the revocation list Verifiable Credential.
          type: string
    Credential:
      type: object
      description: A JSON-LD Verifiable Credential without a proof.
      properties:
        "@context":
          type: array
          description: The JSON-LD context of the credential.
        "credentialStatus":
          $ref: '#/components/schemas/CredentialStatus'
        "id":
          type: string
          description: The ID of the credential.
        "type":
          type: array
          description: The JSON-LD type of the credential.
        "issuer":
          $ref: "#/components/schemas/Issuer"
        "issuanceDate":
          type: string
          description: The issuanceDate
        "expirationDate":
          type: string
          description: The expirationDate
        "credentialSubject":
          type: object
          description: The subject
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
          - 'https://w3id.org/vc-revocation-list-2020/v1'
        "credentialStatus":
          "id": "http://example.gov/credentials/3732#2"
          "type": "RevocationList2020Status"
          "revocationListIndex": "2"
          "revocationListCredential": "https://example.github.io/example-repo/revocation-credential.jsonld"
        credentialSubject:
          degree:
            name: Bachelor of Science and Arts
            type: BachelorDegree
          id: 'did:example:123'
        id: 'http://example.gov/credentials/3732'
        issuanceDate: '2020-03-16T22:37:26.544Z'
        issuer: 'did:example:123'
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
    VerifiableCredential:
      type: object
      description: A JSON-LD Verifiable Credential with a proof.
      allOf:
        - $ref: "#/components/schemas/Credential"
        - type: object
          properties:
            proof:
              $ref: "#/components/schemas/LinkedDataProof"
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        credentialSubject:
          degree:
            name: Bachelor of Science and Arts
            type: BachelorDegree
          id: 'did:example:123'
        id: 'http://example.gov/credentials/3732'
        issuanceDate: '2020-03-16T22:37:26.544Z'
        issuer: 'did:example:123'
        proof:
          created: '2020-04-02T18:28:08Z'
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
          proofPurpose: assertionMethod
          type: Ed25519Signature2018
          verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
    Presentation:
      type: object
      description: A JSON-LD Verifiable Presentation without a proof.
      properties:
        "@context":
          type: array
          description: The JSON-LD context of the presentation.
        "id":
          type: string
          description: The ID of the presentation.
        "type":
          type: array
          description: The JSON-LD type of the presentation.
        "holder":
          type: object
          description: The holder
        "verifiableCredential":
          type: array
          description: The Verifiable Credentials
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        holder: 'did:example:123'
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - 'https://www.w3.org/2018/credentials/v1'
              - 'https://www.w3.org/2018/credentials/examples/v1'
          - id: 'http://example.gov/credentials/3732'
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: 'did:example:123'
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              degree:
                name: Bachelor of Science and Arts
                type: BachelorDegree
              id: 'did:example:123'
          - proof:
              created: '2020-04-02T18:28:08Z'
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
              proofPurpose: assertionMethod
              type: Ed25519Signature2018
              verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
    VerifiablePresentation:
      type: object
      description: A JSON-LD Verifiable Presentation with a proof.
      allOf:
        - $ref: "#/components/schemas/Presentation"
        - type: object
          properties:
            proof:
              $ref: "#/components/schemas/LinkedDataProof"
      example:
        '@context':
          - 'https://www.w3.org/2018/credentials/v1'
          - 'https://www.w3.org/2018/credentials/examples/v1'
        holder: 'did:example:123'
        proof:
          created: '2020-04-02T18:28:08Z'
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
          proofPurpose: assertionMethod
          type: Ed25519Signature2018
          verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - 'https://www.w3.org/2018/credentials/v1'
              - 'https://www.w3.org/2018/credentials/examples/v1'
          - id: 'http://example.gov/credentials/3732'
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: 'did:example:123'
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              degree:
                name: Bachelor of Science and Arts
                type: BachelorDegree
              id: 'did:example:123'
          - proof:
              created: '2020-04-02T18:28:08Z'
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
              proofPurpose: assertionMethod
              type: Ed25519Signature2018
              verificationMethod: 'did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN'
    IssueCredentialRequest:
      type: object
      properties:
        credential:
          $ref: "#/components/schemas/Credential"
    IssueCredentialResponse:
      $ref: "#/components/schemas/VerifiableCredential"
    ProvePresentationRequest:
      type: object
      properties:
        presentation:
          $ref: "#/components/schemas/Presentation"
        options:
          $ref: "#/components/schemas/LinkedDataProofOptions"
    ProvePresentationResponse:
      $ref: "#/components/schemas/VerifiablePresentation"
    VerifyCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
    VerifyCredentialResponse:
      $ref: "#/components/schemas/VerificationResult"
    VerifyPresentationRequest:
      type: object
      properties:
        verifiablePresentation:
          $ref: "#/components/schemas/VerifiablePresentation"
        options:
          $ref: "#/components/schemas/LinkedDataProofOptions"
    VerifyPresentationResponse:
      $ref: "#/components/schemas/VerificationResult"
    RegisterRequest:
      additionalProperties: false
      description: Object containing registration information for a new issuer.
      example:
        username: <test-username>
        password: <test-password>
        didOptions:
          didMethod: factom
          network: testnet
      properties:
        username:
          description: Name of the user to be registered
          type: string
        password:
          description: Password of the user to be registered
          type: string
        didOptions:
          description: Options for newly created DID.
          type: object
          properties:
            didMethod:
              description: The DID method for the newly created DID. Currently only "factom" supported.
              type: string
              enum:
                - factom
            network:
              description: Network for newly registered DID. Currently "testnet" and "mainnet" are supported for Factom.
              type: string
    RegisterResponse:
      additionalProperties: false
      description: Object containing resulting registration information.
      example:
        username: example-user
        did: did:factom:testnet:12345
      properties:
        username:
          description: The username under which the new user is registered.
          type: string
        did:
          description: DID resulting from registration and belonging to new user.
          type: string
    LoginResponse:
      additionalProperties: false
      description: Object containing the Bearer token resulting from the login.
      example:
        token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImRlbW8ifQ.2AZnQ4ICRK1-nhIdMaz0fGGOLqnR0RPZ8e6f5XdavGE
      properties:
        token:
          description: Bearer token for authenticaiton with issuer endpoints.
          type: string
    RevocationListCreateRequest:
      additionalProperties: false
      description: Configuration for publishing a RevocationList credential
      example:
        id: 8858b74c-564f-44d6-942a-06ee4e2f2944
        listSize: 1000000
        publishMethod: github
        gitHubOptions:
          token: <github-access-token>
          owner: Organization
          repo: RepositoryName
          branch: Branch
          path: revocation-credential.jsonld
          useGitHubPages: true
      properties:
        id:
          description: Identifier for the revocation list
          type: string
        listSize:
          description: Size of the list for the associated revocation credential
          type: number
        publishMethod:
          description: Method used to publish and update RevocationList credentials
          type: string
          enum:
            - github
            - mongo
        gitHubOptions:
          $ref: "#/components/schemas/GitHubOptions"
        mongoOptions:
          $ref: '#/components/schemas/MongoOptions'
    MongoOptions:
      additionalProperties: false
      description: Object containing options for hosting the revocation credential on the vc-http-api MongoDB
      example:
        credentialId: 'f0a910f8-697d-4f4e-83c4-ea06e54aa094'
      properties:
        credentialId:
          description: Id under which to store the revoked credential. Must be unique.
          type: string
    GitHubOptions:
      additionalProperties: false
      description: Configuration options for publishing to GitHub
      example:
        token: <github-access-token>
        owner: Organization
        repo: RepositoryName
        branch: Branch
        path: revocation-credential.jsonld
        useGitHubPages: true
      properties:
        token:
          description: GitHub access token with write permissions to the selected repository
          type: string
        owner:
          description: Owner/Organization who controls the git repository
          type: string
        repo:
          description: Name of the git repository
          type: string
        branch:
          description: The branch on which to commit updates. Default is 'master'.
          type: string
        path:
          description: The path to the jsonld credential file to update. Default is 'revocation-credential.jsonld'
          type: string
        useGitHubPages:
          description: Whether to use a GitHub pages URL for to point to the published revocation credential
          type: boolean
    RevocationListResponse:
      additionalProperties: false
      description: Object containing revocation credential initialization result.
      example:
        url: https://example.com/revocation-credential.jsonld
      allOf:
        - $ref: "#/components/schemas/RevocationListCreateRequest"
        - properties:
            url:
              type: string
              description: URL of the deployed revocation credential
    RevocationListArrayResponse:
      additionalProperties: false
      description: Object containing an array of all revocation configurations
      example:
        revocations:
          - id: 8858b74c-564f-44d6-942a-06ee4e2f2944
            url: https://example.com/revocation-credential.jsonld
            listSize: 1000000
            publishMethod: github
            gitHubOptions:
              token: <github-access-token>
              owner: Organization
              repo: RepositoryName
              branch: Branch
              path: revocation-credential.jsonld
      properties:
        revocations:
          description: An array of revocation config objects
          type: array
          items:
            $ref: "#/components/schemas/RevocationListResponse"
    RevocationStatus:
      additionalProperties: false
      description: Object containing the revocation status of the associated index
      example:
        revoked: true
        index: 100
      properties:
        revoked:
          description: Boolean describing whether a credential has been revoked
          type: boolean
        index:
          description: Index corresponding to the revocation status
          type: integer
    CheckRevocationRequest:
      additionalProperties: false
      description: Object containing the index of the revocation status to be checked.
      example:
        index: 100
      properties:
        index:
          description: Integer describing the index of the revocation status to check.
          type: integer
